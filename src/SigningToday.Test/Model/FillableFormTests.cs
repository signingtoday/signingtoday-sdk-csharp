/* 
 * Signing Today Web
 *
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SigningToday.Api;
using SigningToday.Model;
using SigningToday.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SigningToday.Test
{
    /// <summary>
    ///  Class for testing FillableForm
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FillableFormTests
    {
        // TODO uncomment below to declare an instance variable for FillableForm
        //private FillableForm instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of FillableForm
            //instance = new FillableForm();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FillableForm
        /// </summary>
        [Test]
        public void FillableFormInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" FillableForm
            //Assert.IsInstanceOf(typeof(FillableForm), instance);
        }


        /// <summary>
        /// Test the property 'InstanceId'
        /// </summary>
        [Test]
        public void InstanceIdTest()
        {
            // TODO unit test for the property 'InstanceId'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'DocumentId'
        /// </summary>
        [Test]
        public void DocumentIdTest()
        {
            // TODO unit test for the property 'DocumentId'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'PositionX'
        /// </summary>
        [Test]
        public void PositionXTest()
        {
            // TODO unit test for the property 'PositionX'
        }
        /// <summary>
        /// Test the property 'PositionY'
        /// </summary>
        [Test]
        public void PositionYTest()
        {
            // TODO unit test for the property 'PositionY'
        }
        /// <summary>
        /// Test the property 'Width'
        /// </summary>
        [Test]
        public void WidthTest()
        {
            // TODO unit test for the property 'Width'
        }
        /// <summary>
        /// Test the property 'Height'
        /// </summary>
        [Test]
        public void HeightTest()
        {
            // TODO unit test for the property 'Height'
        }
        /// <summary>
        /// Test the property 'Page'
        /// </summary>
        [Test]
        public void PageTest()
        {
            // TODO unit test for the property 'Page'
        }
        /// <summary>
        /// Test the property 'SignerId'
        /// </summary>
        [Test]
        public void SignerIdTest()
        {
            // TODO unit test for the property 'SignerId'
        }
        /// <summary>
        /// Test the property 'ToFill'
        /// </summary>
        [Test]
        public void ToFillTest()
        {
            // TODO unit test for the property 'ToFill'
        }
        /// <summary>
        /// Test the property 'Filled'
        /// </summary>
        [Test]
        public void FilledTest()
        {
            // TODO unit test for the property 'Filled'
        }
        /// <summary>
        /// Test the property 'Invisible'
        /// </summary>
        [Test]
        public void InvisibleTest()
        {
            // TODO unit test for the property 'Invisible'
        }
        /// <summary>
        /// Test the property 'ExtraData'
        /// </summary>
        [Test]
        public void ExtraDataTest()
        {
            // TODO unit test for the property 'ExtraData'
        }

    }

}
