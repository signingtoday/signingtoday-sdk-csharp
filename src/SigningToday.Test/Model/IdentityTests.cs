/* 
 * Signing Today Web
 *
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SigningToday.Api;
using SigningToday.Model;
using SigningToday.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SigningToday.Test
{
    /// <summary>
    ///  Class for testing Identity
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IdentityTests
    {
        // TODO uncomment below to declare an instance variable for Identity
        //private Identity instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Identity
            //instance = new Identity();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Identity
        /// </summary>
        [Test]
        public void IdentityInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" Identity
            //Assert.IsInstanceOf(typeof(Identity), instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Actions'
        /// </summary>
        [Test]
        public void ActionsTest()
        {
            // TODO unit test for the property 'Actions'
        }
        /// <summary>
        /// Test the property 'Provider'
        /// </summary>
        [Test]
        public void ProviderTest()
        {
            // TODO unit test for the property 'Provider'
        }
        /// <summary>
        /// Test the property 'Label'
        /// </summary>
        [Test]
        public void LabelTest()
        {
            // TODO unit test for the property 'Label'
        }
        /// <summary>
        /// Test the property 'ProviderType'
        /// </summary>
        [Test]
        public void ProviderTypeTest()
        {
            // TODO unit test for the property 'ProviderType'
        }
        /// <summary>
        /// Test the property 'SubjectCommonName'
        /// </summary>
        [Test]
        public void SubjectCommonNameTest()
        {
            // TODO unit test for the property 'SubjectCommonName'
        }
        /// <summary>
        /// Test the property 'IssuerCommonName'
        /// </summary>
        [Test]
        public void IssuerCommonNameTest()
        {
            // TODO unit test for the property 'IssuerCommonName'
        }
        /// <summary>
        /// Test the property 'ExpireDate'
        /// </summary>
        [Test]
        public void ExpireDateTest()
        {
            // TODO unit test for the property 'ExpireDate'
        }
        /// <summary>
        /// Test the property 'RawCertificate'
        /// </summary>
        [Test]
        public void RawCertificateTest()
        {
            // TODO unit test for the property 'RawCertificate'
        }
        /// <summary>
        /// Test the property 'Appearance'
        /// </summary>
        [Test]
        public void AppearanceTest()
        {
            // TODO unit test for the property 'Appearance'
        }
        /// <summary>
        /// Test the property 'ProviderData'
        /// </summary>
        [Test]
        public void ProviderDataTest()
        {
            // TODO unit test for the property 'ProviderData'
        }
        /// <summary>
        /// Test the property 'Valid'
        /// </summary>
        [Test]
        public void ValidTest()
        {
            // TODO unit test for the property 'Valid'
        }
        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Test]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }

    }

}
